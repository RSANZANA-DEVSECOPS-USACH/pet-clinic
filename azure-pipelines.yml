# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
pool:
  vmImage: ubuntu-latest

- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
    spotBugsAnalysis: false

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'DEVSECOPS-USACH'
    organization: 'rsanzana-devsecops-usach'
    projectKey: 'RSANZANA-DEVSECOPS-USACH_pet-clinic'
    projectName: 'pet-clinic'

- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'sonarqube'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: true
    sqGradlePluginVersionChoice: 'specify'
    sonarQubeGradlePluginVersion: '3.3'
    spotBugsAnalysis: false

- task: sonarcloud-buildbreaker@2
  inputs:
    SonarCloud: 'DEVSECOPS-USACH'
    organization: 'rsanzana-devsecops-usach'

- task: dependency-check-build-task@6
  inputs:
    projectName: 'pet-clinic'
    scanPath: '${Build.SourcesDirectory}/build/libs'
    format: 'HTML'